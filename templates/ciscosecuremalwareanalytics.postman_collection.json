{
	"info": {
		"_postman_id": "c68ecb4a-9e52-435f-a901-ed026d731f25",
		"name": "ciscosecuremalwareanalytics",
		"description": "A collection of API calls for interacting with the \\[Cisco Secure Malware Analytics\\] (https://panacea.threatgrid.com) API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13286964"
	},
	"item": [
		{
			"name": "Detonate File",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code == 200) {",
							"    let response = pm.response.json();",
							"    var id = response['data']['id']",
							"    pm.collectionVariables.set(\"detonate_file_id\", id);",
							"    setTimeout(function(){}, 5000); //waiting 5 seconds for filescan to process file",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "sample",
							"type": "file",
							"src": []
						},
						{
							"key": "sample_password",
							"value": "",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/v2/samples",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples"
					]
				},
				"description": "Select the file manually in file parameter to run \"detonate file\" action. Add the password manually if selected file is password protected."
			},
			"response": []
		},
		{
			"name": "Detonate Url",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code == 200) {",
							"    let response = pm.response.json();",
							"    var id = response['data']['id']",
							"    pm.collectionVariables.set(\"detonate_url_id\", id);",
							"    setTimeout(function(){}, 5000); //waiting 5 seconds for filescan to process file",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "url",
							"value": "{{scan_url}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/v2/samples",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples"
					]
				},
				"description": "Starts a scan for the url passed. Returns a id which will later be used to fetch scan results (get report) when they are produced."
			},
			"response": []
		},
		{
			"name": "Get File report",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.collectionVariables.has(\"detonate_file_id\")){",
							"    var base_url = pm.variables.get(\"base_url\")",
							"    var api_key = pm.variables.get(\"api_key\");",
							"    var id = pm.collectionVariables.get(\"detonate_file_id\")",
							"    const request = {",
							"        url: base_url+\"/api/v2/samples/\"+id+\"?api_key=\"+api_key,",
							"        method: \"get\",",
							"        header: {",
							"            'Content-Type': 'application/json',",
							"            \"API-Key\": pm.variables.get(\"api_key\")",
							"        }",
							"    }",
							"    pm.sendRequest(request, function (err, response) {",
							"        var response = response.json()",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{base_url}}/api/v2/samples/{{detonate_file_id}}?api_key={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples",
						"{{detonate_file_id}}"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						}
					]
				},
				"description": "Query for results of an already completed detonation\n\n*Note: Run 'Detonate File' before running this to set \\`detonate_file_id\\` variable*"
			},
			"response": []
		},
		{
			"name": "List Playbooks",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v3/configuration/playbooks?api_key={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v3",
						"configuration",
						"playbooks"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						}
					]
				},
				"description": "List the playbooks available in the connected Cisco Secure Malware Analytics environment"
			},
			"response": []
		},
		{
			"name": "List VMs",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v3/configuration/vms?api_key={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v3",
						"configuration",
						"vms"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						}
					]
				},
				"description": "List the VMs available in the connected Cisco Secure Malware Analytics environment"
			},
			"response": []
		},
		{
			"name": "List Submissions",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v2/search/submissions?api_key={{api_key}}&limit={{limit}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"search",
						"submissions"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						},
						{
							"key": "limit",
							"value": "{{limit}}",
							"description": "Specifies the limit of number of records to fetch. Default value is 100."
						}
					]
				},
				"description": "List the submissions present on Cisco Secure Malware Analytics"
			},
			"response": []
		},
		{
			"name": "File Analysis",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.collectionVariables.has(\"detonate_file_id\")){",
							"    var base_url = pm.variables.get(\"base_url\")",
							"    var api_key = pm.variables.get(\"api_key\");",
							"    var id = pm.collectionVariables.get(\"detonate_file_id\")",
							"    const request = {",
							"        url: base_url+\"/api/v2/samples/\"+id+\"/analysis.json?api_key=\"+api_key,",
							"        method: \"get\"",
							"    }",
							"    pm.sendRequest(request, function (err, response) {",
							"        var response = response.json()",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v2/samples/{{detonate_file_id}}/analysis.json?api_key={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples",
						"{{detonate_file_id}}",
						"analysis.json"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						}
					]
				},
				"description": "Query for analysis of results of an already completed file detonation\n\n*Note: Run 'Detonate File' before running this to set \\`detonate_file_id\\` variable*"
			},
			"response": []
		},
		{
			"name": "File HTML report",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.collectionVariables.has(\"detonate_file_id\")){",
							"    var base_url = pm.variables.get(\"base_url\")",
							"    var api_key = pm.variables.get(\"api_key\");",
							"    var id = pm.collectionVariables.get(\"detonate_file_id\")",
							"    const request = {",
							"        url: base_url+\"/api/v2/samples/\"+id+\"/report.html?api_key=\"+api_key,",
							"        method: \"get\"",
							"    }",
							"    pm.sendRequest(request, function (err, response) {",
							"        var response = response.json()",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v2/samples/{{detonate_file_id}}/report.html?api_key={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples",
						"{{detonate_file_id}}",
						"report.html"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						}
					]
				},
				"description": "Download the report of already completed detonation\n\n*Note: Run 'Detonate File' before running this to set \\`detonate_file_id\\` variable*"
			},
			"response": []
		},
		{
			"name": "File Threat analysis",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.collectionVariables.has(\"detonate_file_id\")){",
							"    var base_url = pm.variables.get(\"base_url\")",
							"    var api_key = pm.variables.get(\"api_key\");",
							"    var id = pm.collectionVariables.get(\"detonate_file_id\")",
							"    const request = {",
							"        url: base_url+\"/api/v2/samples/\"+id+\"/threat?api_key=\"+api_key,",
							"        method: \"get\"",
							"    }",
							"    pm.sendRequest(request, function (err, response) {",
							"        var response = response.json()",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v2/samples/{{detonate_file_id}}/threat?api_key={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples",
						"{{detonate_file_id}}",
						"threat"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						}
					]
				},
				"description": "Query for threat analysis of results of an already completed file detonation\n\n*Note: Run 'Detonate File' before running this to set \\`detonate_file_id\\` variable*"
			},
			"response": []
		},
		{
			"name": "Hash Search",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v2/search/submissions?api_key={{api_key}}&checksum={{hash}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"search",
						"submissions"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						},
						{
							"key": "checksum",
							"value": "{{hash}}"
						}
					]
				},
				"description": "Used when force re-run of same file detonation is not required"
			},
			"response": []
		},
		{
			"name": "Get Url report",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.collectionVariables.has(\"detonate_url_id\")){",
							"    var base_url = pm.variables.get(\"base_url\")",
							"    var api_key = pm.variables.get(\"api_key\");",
							"    var id = pm.collectionVariables.get(\"detonate_url_id\")",
							"    const request = {",
							"        url: base_url+\"/api/v2/samples/\"+id+\"?api_key=\"+api_key,",
							"        method: \"get\"",
							"    }",
							"    pm.sendRequest(request, function (err, response) {",
							"        var response = response.json()",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v2/samples/{{detonate_url_id}}?api_key={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples",
						"{{detonate_url_id}}"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						}
					]
				},
				"description": "Query for results of an already completed detonation\n\n*Note: Run 'Detonate URL' before running this to set \\`detonate_url_id\\` variable*"
			},
			"response": []
		},
		{
			"name": "Test Connectivity",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v2/samples?api_key={{api_key}}&limit=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						},
						{
							"key": "limit",
							"value": "1"
						}
					]
				},
				"description": "Validate the asset configuration for connectivity. Checks the connection and credentials"
			},
			"response": []
		},
		{
			"name": "Url Analysis",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.collectionVariables.has(\"detonate_url_id\")){",
							"    var base_url = pm.variables.get(\"base_url\")",
							"    var api_key = pm.variables.get(\"api_key\");",
							"    var id = pm.collectionVariables.get(\"detonate_url_id\")",
							"    const request = {",
							"        url: base_url+\"/api/v2/samples/\"+id+\"/analysis.json?api_key=\"+api_key,",
							"        method: \"get\"",
							"    }",
							"    pm.sendRequest(request, function (err, response) {",
							"        var response = response.json()",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v2/samples/{{detonate_url_id}}/analysis.json?api_key={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples",
						"{{detonate_url_id}}",
						"analysis.json"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						}
					]
				},
				"description": "Query for analysis of results of an already completed url detonation\n\n*Note: Run 'Detonate URL' before running this to set \\`detonate_url_id\\` variable*"
			},
			"response": []
		},
		{
			"name": "Url HTML report",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.collectionVariables.has(\"detonate_url_id\")){",
							"    var base_url = pm.variables.get(\"base_url\")",
							"    var api_key = pm.variables.get(\"api_key\");",
							"    var id = pm.collectionVariables.get(\"detonate_url_id\")",
							"    const request = {",
							"        url: base_url+\"/api/v2/samples/\"+id+\"/report.html?api_key=\"+api_key,",
							"        method: \"get\"",
							"    }",
							"    pm.sendRequest(request, function (err, response) {",
							"        var response = response.json()",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v2/samples/{{detonate_url_id}}/report.html?api_key={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples",
						"{{detonate_url_id}}",
						"report.html"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						}
					]
				},
				"description": "Download the report of already completed detonation\n\n*Note: Run 'Detonate URL' before running this to set \\`detonate_url_id\\` variable*"
			},
			"response": []
		},
		{
			"name": "Url Threat analysis",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.collectionVariables.has(\"detonate_url_id\")){",
							"    var base_url = pm.variables.get(\"base_url\")",
							"    var api_key = pm.variables.get(\"api_key\");",
							"    var id = pm.collectionVariables.get(\"detonate_url_id\")",
							"    const request = {",
							"        url: base_url+\"/api/v2/samples/\"+id+\"/threat?api_key=\"+api_key,",
							"        method: \"get\"",
							"    }",
							"    pm.sendRequest(request, function (err, response) {",
							"        var response = response.json()",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v2/samples/{{detonate_url_id}}/threat?api_key={{api_key}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v2",
						"samples",
						"{{detonate_url_id}}",
						"threat"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{api_key}}"
						}
					]
				},
				"description": "Query for threat analysis of results of an already completed url detonation\n\n*Note: Run 'Detonate URL' before running this to set \\`detonate_url_id\\` variable*"
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "query",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{api_key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "api_key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://panacea.threatgrid.com",
			"type": "string"
		},
		{
			"key": "api_key",
			"value": "",
			"type": "string"
		},
		{
			"key": "scan_url",
			"value": "",
			"type": "string"
		},
		{
			"key": "limit",
			"value": "",
			"type": "string"
		},
		{
			"key": "hash",
			"value": "",
			"type": "string"
		},
		{
			"key": "detonate_file_id",
			"value": ""
		},
		{
			"key": "detonate_url_id",
			"value": ""
		}
	]
}
